<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Mcokos Blog</title>
  
  <subtitle>面朝大海，春暖花开</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2023-04-27T06:29:31.495Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>Mcokos</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>View事件传递过程</title>
    <link href="http://example.com/2023/04/27/view-transform/"/>
    <id>http://example.com/2023/04/27/view-transform/</id>
    <published>2023-04-27T04:17:43.000Z</published>
    <updated>2023-04-27T06:29:31.495Z</updated>
    
    
    <summary type="html">实际上，当我们手指触摸屏幕的时候，事件最先是传递给当前的`Actvity`，由`Actvity` 的`dispatchTouchEvent`方法来分发事件....
</summary>
    
    
    
    <category term="Android" scheme="http://example.com/categories/Android/"/>
    
    
    <category term="android" scheme="http://example.com/tags/android/"/>
    
    <category term="事件传递" scheme="http://example.com/tags/%E4%BA%8B%E4%BB%B6%E4%BC%A0%E9%80%92/"/>
    
  </entry>
  
  <entry>
    <title>Retrofit的具体网络流程</title>
    <link href="http://example.com/2023/04/27/retrofit-detail/"/>
    <id>http://example.com/2023/04/27/retrofit-detail/</id>
    <published>2023-04-27T04:11:26.000Z</published>
    <updated>2023-04-28T01:45:09.894Z</updated>
    
    
    <summary type="html">Retrofit通过解析网络请求接口的注解获得网络请求参数, 动态代理生成网络请求对象
</summary>
    
    
    
    <category term="Android" scheme="http://example.com/categories/Android/"/>
    
    
    <category term="retrofit" scheme="http://example.com/tags/retrofit/"/>
    
    <category term="网络" scheme="http://example.com/tags/%E7%BD%91%E7%BB%9C/"/>
    
    <category term="android" scheme="http://example.com/tags/android/"/>
    
  </entry>
  
  <entry>
    <title>沉浸式状态栏的实现方式</title>
    <link href="http://example.com/2023/04/27/Androidchengjing/"/>
    <id>http://example.com/2023/04/27/Androidchengjing/</id>
    <published>2023-04-27T02:54:54.000Z</published>
    <updated>2023-04-27T03:44:00.811Z</updated>
    
    
    <summary type="html">沉浸式状态栏的实现方式有两种&lt;br /&gt;</summary>
    
    
    
    <category term="Android" scheme="http://example.com/categories/Android/"/>
    
    
    <category term="android" scheme="http://example.com/tags/android/"/>
    
    <category term="java" scheme="http://example.com/tags/java/"/>
    
  </entry>
  
</feed>
